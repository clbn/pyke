+ Use task term instead of command. Command is an operation name. Task is a named operation.
+ --describe pattern (-D) — Describe the tasks (matching optional PATTERN), then exit.
+ (?) --dry-run (-n) — Do a dry run. Print the tasks invoked and executed, but do not actually execute any of the actions.
+ --quiet (-q) — Do not echo commands from FileUtils.
+ --rakefile filename (-f) — Use filename as the name of the rakefile. The default rakefile names are rakefile and Rakefile (with rakefile taking precedence). If the rakefile is not found in the current directory, rake will search parent directories for a match. The directory where the Rakefile is found will become the current directory for the actions executed in the Rakefile.
+ --verbose (-v) — Echo the Sys commands to standard output.

- pyke
  - if no pykefile
    - say no pykefile
  - else if default task defined
    - execute default
  - else say 'no default task defined in the pykefile, use --help'
- pyke -h/--help
  - if pykefile exists
    - parse
  - show global help
- pyke <task> --help
  - if no pykefile
    - say no pykefile
  - else if task not definded
    - say task not defined
  - else show task help
- else (pyke <anything>)
  - if no pykefile
    - say no pykefile
  - else
    - process command line with pykeparser
    - execute task

- Search parent directories for pykefile // If the rakefile is not found in the current directory, rake will search parent directories for a match. The directory where the Rakefile is found will become the current directory for the actions executed in the Rakefile.

Shortcuts for file manipulations and system calls (wrap shutil):
- control echo by --quiet
- drydun option for each (echo only)
- keep everything to pyke.tools (supposed to be safely import-*-ed)
  The public names defined by a module are determined by checking the module's namespace for a variable named __all__; if defined, it must be a sequence of strings which are names defined or imported by that module. The names given in __all__ are all considered public and are required to exist. If __all__ is not defined, the set of public names includes all names found in the module's namespace which do not begin with an underscore character ("_"). __all__ should contain the entire public API. It is intended to avoid accidentally exporting items that are not part of the API (such as library modules which were imported and used within the module).
- sh
- cp
- mv
- rm
- rm_rf
- exist
- isdir
- isfile
- env
- mkdir
- touch
- now with {hour, minute, second} int fields
- date with {year, month, day} int fields
- OS
- supress_dryrun() to exit if dry run mode is not implemented for certain task

- Default task optionally defined by a constant DEFAULT={function}
- Implement public-static test scripts
- Implement public-static bootstrap update
- Add both to Real Life Examples readme paragraph
- Add init command to generate basic Pykefile
- Add to Alternatives paragraph: http://paver.github.io, http://www.buildout.org/en/latest

- Task: set or increment version, and create a git tag with the same name
  cmd = ['git', 'add', fileName]
  p = subprocess.Popen(cmd, cwd=repoDir)
  p.wait()

  import sh
  git = sh.git.bake(_cwd='/home/me/repodir')
  print git.status()
  # checkout and track a remote branch
  print git.checkout('-b', 'somebranch')
  # add a file
  print git.add('somefile')
  # commit
  print git.commit(m='my commit message')
  # now we are one commit ahead
  print git.status()

